"use strict";

(function(global) {
  global.JibJob = global.JibJob || {};

  global.JibJob.ResumeForm = React.createClass({
    propTypes: {
      resume: React.PropTypes.object.isRequired,
      saveMethod: React.PropTypes.oneOf(['POST', 'PUT']).isRequired,
      saveURL: React.PropTypes.string.isRequired,
    },

    getInitialState: function() {
      return {
        isLoading: false
      };
    },

    componentDidMount: function() {

    },

    submitForm: function(e) {
      e.preventDefault();
      this.setState({isLoading: true});

      var self = this;
      var resume = this.props.resume;

      $.ajax({
        url: this.props.saveURL,
        data: {resume: resume},
        method: this.props.saveMethod,
      }).done(function(data) {
        var nextPage = data.meta.redirect;
        window.location = nextPage;
      }).fail(function(xhr, status) {
        self.setProps({
          resume: React.addons.update(self.props.resume, {
            $merge: xhr.responseJSON.resume
          })
        })
      }).always(function(xhr) {
        self.setState({isLoading: false});
      });
    },

    nameFieldChange: function(e) {
      var newName = e.target.value;
      var newSlug = newName.replace(/['/]/g, '').replace(/[ .,:-]/g, '-').toLocaleLowerCase();

      this.setProps({
        resume: React.addons.update(this.props.resume, {
          $merge: {name: newName, slug: newSlug}
        })
      });
    },

    slugFieldChange: function(e) {
      var newSlug = e.target.value;

      this.setProps({
        resume: React.addons.update(this.props.resume, {
          slug: {$set: newSlug}
        })
      });
    },

    contentFieldChange: function(e) {
      var newContent = e.target.value;

      this.setProps({
        resume: React.addons.update(this.props.resume, {
          content: {$set: newContent}
        })
      });
    },

    loadExampleContent: function(e) {
      e.preventDefault();
      var self = this;
      var url = "<%= asset_path("sample-resume.txt") %>";

      $.get(url).done(function(data) {
        self.setProps({
          resume: React.addons.update(self.props.resume, {
            content: {$set: data}
          })
        })
      });
    },

    render: function() {
      var resume = this.props.resume;
      return (
        <div className="page">
          <div className="page-header">
            <div className="container">
              <h4>New Resume</h4>
            </div>
          </div>
          <div className="container resume-form">
            <JibJob.ErrorDisplay model={resume} />
            <form action={this.props.saveURL} method="POST" className="form" onSubmit={this.submitForm}>
              <div className="form-group">
                <label>Name</label>
                <input type="text" name="resume[name]" value={resume.name} onChange={this.nameFieldChange}
                  className="form-control" autoComplete="off" spellCheck="false" placeholder="A private name for this resume" autoFocus="true" />
              </div>
              <div className="form-group">
                <label>Slug</label>
                <input type="text" name="resume[slug]" value={resume.slug} onChange={this.slugFieldChange}
                  className="form-control" autoComplete="off" spellCheck="false" placeholder="A public identifier value like http://jibjob.co/resumes/[slug]" />
              </div>
              <div className="form-group">
                <label>Content</label>
                <a href="#" className="btn btn-xs btn-default pull-right" onClick={this.loadExampleContent}>Load Example</a>
                <textarea value={resume.content} placeholder="Resume content" onChange={this.contentFieldChange} className="form-control console" rows="25" />
              </div>
              <JibJob.GlyphedButton type="submit" showLoading={this.state.isLoading} className="btn btn-success form-control" buttonType="success">
                <span>Save Resume</span>
              </JibJob.GlyphedButton>
            </form>
          </div>
        </div>
      );
    }
  });
}(window));